<?php
$a = 5;
$b = '05';
// нестрогое сравнение (==) приводит строку к числу, '05' становится 5
// вывод: bool(true)
var_dump($a == $b); 
// ведущие нули удаляются, строка интерпретируется как число.
// вывод: int(12345)
var_dump((int)'012345');
// жёсткое сравнение (===) проверяет и значение, и тип. (float)123.0 — число с плавающей точкой, (int)123.0 — целое число. вывод: bool(false)
var_dump((float)123.0 === (int)123.0);
// строка приводится к числу, и некорректная строка становится 0. вывод: bool(true)
var_dump(0 == 'hello, world');

$a = 1;
$b = 2;

// Обмен значениями без дополнительных переменных за счет арифметических операций
$a = $a + $b;  // Теперь $a = 3
$b = $a - $b;  // Теперь $b = 1
$a = $a - $b;  // Теперь $a = 2

echo "a = $a, b = $b"; // a = 2, b = 1
?>
 <!-- При замене версии PHP с 8.2 на 7.4. вывод останется таким же, так как в коде используются базовые принципы сравнения, не зависящие от версии PHP. -->

<!-- используемые команды для запуска и остановки контейнера
docker-compose up -d
docker-compose down  -->